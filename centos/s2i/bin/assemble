#!/bin/bash
#
# S2I assemble script for the 's2i-maven-java' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

set -e
shopt -u dotglob
DOCROOT="/var/www/html"
SHARE="/usr/share/httpd"
export COMPOSER_MEMORY_LIMIT=-1
export JAVA_OPTS="-XX:-UseContainerSupport -Dfile.encoding=UTF8 -XX:+ExitOnOutOfMemoryError"


function sonarqube() {


if [[ "$SONARQUBE_ENABLED" == 1 ]]; then
echo "----> SONARQUBE ACTIVADO."
echo "----> VALIDANDO DATOS DE CONEXION.."

if [[ -z "$SONARQUBE_HOST" ]] || [[ -z "$SONARQUBE_PROJECTKEY" ]] || [[ -z "$SONARQUBE_PROJECTNAME" ]]; then

echo "----> ERROR NO SE ENCONTRARON LAS VARIABLES REQUERIDAS."
echo "----> VERIFIQUE SONARQUBE_HOST, SONARQUBE_PROJECTNAME, SONARQUBE_PROJECTKEY."
exit 1
fi
cd $DOCROOT && \
/opt/sonar/bin/sonar-scanner -Dsonar.projectKey=$SONARQUBE_PROJECTKEY -Dsonar.projectName=$SONARQUBE_PROJECTNAME \
-Dsonar.exclusions=vendor/** -Dsonar.sources=$DOCROOT -Dsonar.host.url=$SONARQUBE_HOST -Dsonar.scm.enabled=false
echo "----> SONARQUBE ANALISIS FINALIZADO!."
else 
echo "----> SONARQUBE DESACTIVADO."
fi


}



if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi


  if [ -d /tmp/artifacts/vendor ]; then
  echo "---> RESTAURANDO VENDOR DESDE CACHE..."
  cp -rf /tmp/artifacts/vendor $DOCROOT/vendor
  rm -rf /tmp/artifacts

fi

echo "---> INSTALANDO CODIGO FUENTE..."
cp -rf /tmp/src/.  $DOCROOT/
rm -rf /tmp/src

#### sonarqube function
sonarqube
#####

if [[ -f "$DOCROOT/composer.json" ]]; then
echo "----> COMPOSER ENCONTRADO!"
echo "----> INSTALANDO..."
cd $DOCROOT	
mkdir -p $SHARE/.composer
echo "{}" > $SHARE/.composer/composer.json

if [[ -f "$DOCROOT/composer.lock" ]]; then
rm -rf composer.lock
fi

if [[ ! -z $NEXUS_COMPOSER_REPO ]]; then
echo "----> NEXUS_COMPOSER_REPO ENCONTRADO!"
composer config -g secure-http false
composer config repositories.custom '{"type": "composer", "url": "nexus_custom_repo", "secure-http": "false"}'
sed -i "s@nexus_custom_repo@$NEXUS_COMPOSER_REPO@" composer.json
composer config -g repo.packagist false
fi
composer clear-cache
composer update -vvv --no-scripts -d $DOCROOT
composer install -vvv --no-scripts -d $DOCROOT
$EXTRA_COMPOSER_COMMAND
echo "----> FIN INSTALACION COMPOSER..."
fi

#######################################
echo "----> COMPLETANDO TAREAS ADICIONALES..."

if [[ -d $DOCROOT/public ]]; then
echo "----> SE ENCONTRO DIRECTORIO PUBLIC."
echo "----> DEFINIENDO COMO DOCUMENTROOT.."
sed -i -e 's/DocumentRoot.*/DocumentRoot "\/var\/www\/html\/public"/g' /etc/httpd/conf.d/security.conf
fi


if [ $(find $DOCROOT/ -iname '.env*' | wc -l) -gt 0 ]; then
echo "----> SE ENCONTRARON ARCHIVOS .env* EN LAS FUENTES - ELIMINANDO POR MOTIVOS DE SEGURIDAD..."
echo "----> --------------------------------------------------------------------------------------------------"
echo "----> NUNCA INCLUYA ARCHIVOS DE CONFIGURACION, CERTIFICADOS, O DATASOURCES ESPECIFICOS PARA CADA AMBIENTE DENTRO DE LAS IMAGENES..."
echo "----> --------------------------------------------------------------------------------------------------"
find $DOCROOT -iname '.env*' -exec rm -rf {} \;
fi
#######################################
echo "START FIX PERMISSIONS..."
/usr/libexec/s2i/fix $SHARE
/usr/libexec/s2i/fix $DOCROOT
echo "FIX PERMISSIONS END"
echo "----> INSTALACION FINALIZADA"
